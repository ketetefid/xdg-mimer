name: Build and Package for Release
on:
  release:
    types: [created]

permissions:
  contents: write
  
jobs:
  build-linux:
    name: Build tar.gz & DEB Packages
    runs-on: ubuntu-latest
    container:
      image: ubuntu:24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from Cargo.toml and put in control file
        id: extract_version
        run: |
          VERSION=$(grep '^version' Cargo.toml | head -n 1 | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          sed -i "s/@VERSION@/${VERSION}/g" debian/control
          
      - name: Install packaging tools and deps
        run: |
          apt-get update
          apt-get install -y devscripts debhelper rsync build-essential pkg-config \
          libgtk-4-dev \
          libglib2.0-dev \
          libgdk-pixbuf-2.0-dev \
          libcairo2-dev \
          libpango1.0-dev \
          libgraphene-1.0-dev \
          libgirepository1.0-dev \
          libatk1.0-dev \
          libadwaita-1-dev

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          
      - name: Build binary & package as .tar.gz
        run: |
          mkdir -p dist
          cargo build --release
          cp target/release/xdg-mimer dist/
          tar -czvf dist/xdg-mimer-${{ env.VERSION }}-linux.tar.gz -C dist xdg-mimer
          rm dist/xdg-mimer
          
      - name: Build .deb from the binary without dh-cargo
        run: |
          mkdir -p deb/usr/bin
          cp target/release/xdg-mimer deb/usr/bin/
          mkdir deb/DEBIAN
          cp debian/control deb/DEBIAN
          dpkg-deb --build deb
          mv deb.deb dist/xdg-mimer_${{ env.VERSION }}_amd64.deb
        
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # RPM build        
  build-rpm:
    name: Build RPM Package
    runs-on: ubuntu-latest
    container:
      image: fedora:latest

    steps:
      - name: Checkout code      
        uses: actions/checkout@v4
        
      - name: Extract version from Cargo.toml
        id: extract_version
        run: |
          VERSION=$(grep '^version' Cargo.toml | head -n 1 | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Install RPM and Rust dependencies
        run: |
          dnf update -y
          dnf install -y \
              rust cargo \
              pkgconf-pkg-config \
              glib2-devel \
              gtk4-devel \
              pango-devel \
              cairo-devel \
              gdk-pixbuf2-devel \
              graphene-devel \
              libadwaita-devel \
              gcc make automake autoconf libtool \
              rpm-build

      - name: Set up RPM build structure
        run: |
          mkdir -p rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
          sed "s/@VERSION@/${{ env.VERSION }}/g" xdg-mimer.spec > rpmbuild/SPECS/xdg-mimer.spec
          tar czf rpmbuild/SOURCES/xdg-mimer-$VERSION.tar.gz --transform "s,^,xdg-mimer-$VERSION/," .

      - name: Build RPM
        run: |
          rpmbuild -ba rpmbuild/SPECS/xdg-mimer.spec --define "_topdir $(pwd)/rpmbuild"

      - name: Upload RPM
        uses: softprops/action-gh-release@v1
        with:
          files: rpmbuild/RPMS/**/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Arch build        
  build-arch:
    name: Build Arch Package
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Extract version from Cargo.toml & replace version in PKGBUILD
        id: extract_version
        run: |
          VERSION=$(grep '^version' Cargo.toml | head -n 1 | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          sed -i "s/@VERSION@/${VERSION}/g" PKGBUILD

      - name: Install system and build dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm \
            rsync \
            cargo \
            rust \
            gtk4 \
            glib2 \
            gdk-pixbuf2 \
            cairo \
            pango \
            graphene \
            gobject-introspection \
            atk

      - name: Add builder user and change ownership
        run: |
          useradd -m builder
          chown -R builder .
          
      - name: Create source tarball for Arch
        run: |
          mkdir -p buildsrc
          rsync -a --exclude buildsrc ./ buildsrc/
          mv buildsrc xdg-mimer-${VERSION}
          tar -czf xdg-mimer-${VERSION}.tar.gz xdg-mimer-${VERSION}
    
      - name: Build package
        run: |
          su builder -c "makepkg -s --noconfirm"

      - name: Upload .pkg.tar.zst
        uses: softprops/action-gh-release@v1
        with:
          files: ./*.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
